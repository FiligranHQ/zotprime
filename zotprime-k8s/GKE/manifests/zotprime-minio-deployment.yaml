# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apps: zotprime-minio
  name: zotprime-minio
  namespace: zotprime # Change this value to match the namespace metadata.name
spec:
  replicas: 1
  selector:
    matchLabels:
      apps: zotprime-minio
  strategy: {}
  template:
    metadata:
      labels:
        apps: zotprime-minio
      name: zotprime-minio
    spec:
      containers:
        - name: zotprime-minio
          image: uniuu/zotprime-minio:2.6.1-rc
          imagePullPolicy: Always
          resources:
            limits:
              memory: 512Mi
#              cpu: "0.5"
            requests:
              memory: 512Mi
              cpu: "0.5"
          command:
            - /bin/bash
            - -c
          args: 
            -  set -o allexport && source tmp/_key/secret-minio.txt && set +o allexport && minio server /data --console-address :9001 
#| tee /data/test.log
#    lifecycle:
#      preStop:
#        exec:
#          command:
#            - /bin/sh
#            - -c
#          args: ls -lha /tmp/_key/
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 20
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 0
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 1
            httpGet:
              path: /minio/health/live
              port: 9000
          ports:
            - containerPort: 9000
              name: data
            - containerPort: 9001
              name: ui
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                 configMapKeyRef:
                   name: minio-config
                   key: minio-user
          volumeMounts:
            - name: s3data # Corresponds to the `spec.volumes` Persistent Volume
              mountPath: /data
            - name: minio-secret
              mountPath: "/tmp/_key"
#             subPath: secret.txt
              readOnly: true
        - name: zotprime-miniomc
          image: uniuu/zotprime-miniomc:2.6.1-rc
          resources:
            limits:
              memory: 256Mi
#              cpu: "0.2"
            requests:
              memory: 256Mi
              cpu: "0.2"
          volumeMounts:
            - name: s3data # Corresponds to the `spec.volumes` Persistent Volume
              mountPath: /data
            - name: minio-secret
              mountPath: "/tmp/_key"
              readOnly: true
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: minio-user
#      nodeSelector:
#        kubernetes.io/hostname: localhost.localdomain # Specify a node label associated to the Worker Node on which you want to deploy the pod.
#  terminationGracePeriodSeconds: 30
      priorityClassName: high-priority
      restartPolicy: Always
      securityContext: {}
      volumes:
        - name: s3data
          persistentVolumeClaim:
            claimName: dataminio
#        - name: bucketsstore
#          hostPath: # MinIO generally recommends using locally-attached volumes
#            path: /mnt/disk1/data # Specify a path to a local drive or volume on the Kubernetes worker node
#            type: DirectoryOrCreate # The path to the last directory must exist
        - name: minio-secret
          secret:
            secretName: minio-secret
status: {}