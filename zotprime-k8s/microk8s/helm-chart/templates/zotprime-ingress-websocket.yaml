apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "zotprime-k8s.fullname" . }}-zotprime-ingress-websocket
  labels:
    apps: zotprime-ingress-websocket
  {{- include "zotprime-k8s.labels" . | nindent 4 }}
  annotations:
#    cert-manager.io/issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/server-snippets: |
      location / {
        proxy_set_header Upgrade $http_upgrade;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
      }
spec:
#  tls:
#   - secretName: web-ssl
#     hosts:
#      - {{ .Values.ingressHostnames.streamserver }}
  rules:
  - host: {{ .Values.ingressHostnames.streamserver }}
    http:
      paths:
      - backend:
          service:
            name: streamserver
            port:
              name: streamserver
        path: /
        pathType: Prefix